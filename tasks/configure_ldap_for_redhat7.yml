---
- name: configuration | Generate password `slappasswd -s password`
  command: "slappasswd -s {{ openldap_server_rootpw }}"
  register: openldap_server_sha_pass

- name: configuration | Generate LDAP db configuration
  template:
    src: db.ldif.j2
    dest: /tmp/db.ldif
  register: db_ldif

- name: configuration | Apply LDAP db configuration
  command: "ldapmodify -Y EXTERNAL  -H ldapi:/// -f {{ db_ldif.dest|default(db_ldif.path) }}"
  when: db_ldif|changed
  notify:
    - restart slapd

- name: configuration | Add schemas
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/{{ item }}.ldif"
  with_items:
    - cosine
    - nis
    - inetorgperson
  ignore_errors: true
  notify:
    - restart slapd

- name: configuration | Generate LDAP restricted access configuration
  template:
    src: monitor.ldif.j2
    dest: /tmp/monitor.ldif
  register: monitor_ldif

- name: configuration | Ensure access to LDAP has correct administrator restrictions
  command: "ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ monitor_ldif.dest|default(monitor_ldif.path) }}"
  when: monitor_ldif|changed
  notify:
    - restart slapd

- name: configuration | Generate additional LDAP restricted access configurations
  template:
    src: "{{ item }}.ldif.j2"
    dest: "/tmp/{{ item }}.ldif"
  register: monitor_add_ldif
  with_items:
    - monitor_add1
    - monitor_add2

- name: configuration | Ensure access to LDAP has correct restrictions
  command: "ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ item.dest|default(item.path) }}"
  when: item|changed
  with_items: "{{ monitor_add_ldif.results }}"
  notify:
    - restart slapd

# Create certificate?
# Correct permissions of certificates?
# configure LDAP to use certificates
- name: configuration | test it
  command: slaptest -u

- name: configuration | copy DB_CONFIG
  copy:
    dest: /var/lib/ldap/DB_CONFIG
    group: ldap
    remote_src: yes
    src: /usr/share/openldap-servers/DB_CONFIG.example
    owner: ldap
  notify:
    - restart slapd

- name: configuration | Generate LDAP db configuration
  template:
    src: base.ldif.j2
    dest: /tmp/base.ldif
  register: base_ldif

- name: configuration | Apply LDAP db configuration
  command: "ldapadd -x -w {{ openldap_server_rootpw|mandatory }} -D \"cn={{ openldap_server_admin }},dc={{ openldap_server_domain }},dc={{ openldap_server_tld }}\" -f {{ base_ldif.dest|default(base_ldif.path) }}"
  ignore_errors: true
  notify:
    - restart slapd
